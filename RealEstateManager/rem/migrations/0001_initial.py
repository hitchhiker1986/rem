# Generated by Django 5.0 on 2024-01-16 20:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Utility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.CharField(max_length=30)),
                ('type', models.CharField(choices=[('HWA', 'hot water'), ('CWA', 'cold water'), ('ELE', 'electricity'), ('GAS', 'gas')], default='ELE', max_length=3)),
                ('current', models.FloatField()),
                ('unit', models.CharField(choices=[('KWH', 'kWh'), ('M3', 'm3')], default='KWH', max_length=3)),
                ('delta', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('zip', models.CharField(max_length=4)),
                ('address', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=15)),
                ('birth_name', models.CharField(max_length=50)),
                ('persID', models.CharField(max_length=20)),
                ('taxID', models.CharField(max_length=15)),
                ('iban', models.CharField(max_length=40)),
                ('is_company', models.BooleanField(default=False)),
                ('active_owner', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('zip', models.CharField(max_length=4)),
                ('address', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=15)),
                ('birth_name', models.CharField(max_length=50)),
                ('persID', models.CharField(max_length=20)),
                ('taxID', models.CharField(max_length=15)),
                ('iban', models.CharField(max_length=40)),
                ('is_company', models.BooleanField(default=False)),
                ('active_tenant', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ToDo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_day', models.PositiveIntegerField(default=1)),
                ('end_day', models.PositiveIntegerField(default=1)),
                ('description', models.TextField(max_length=500)),
                ('title', models.TextField(max_length=50)),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('owner', models.ManyToManyField(related_name='apartment_owner', to='rem.owner')),
                ('tenant', models.ManyToManyField(related_name='apartment_tenant', to='rem.tenant')),
                ('utilities', models.ManyToManyField(to='rem.utility')),
            ],
        ),
    ]
